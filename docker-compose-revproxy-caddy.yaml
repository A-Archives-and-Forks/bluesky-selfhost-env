version: "3"

volumes:
  caddy-data:
  caddy-config:

services:
  caddy:
#   cf. https://blog.kurokobo.com/archives/3669#Caddy_acme_server
    image: caddy:2
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 9000:9000
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL4CERTS=${EMAIL4CERTS}
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
      # CA certificates, required to add OS by update-ca-certificates
      - ./certs/root.crt:/data/caddy/pki/authorities/local/root.crt
      - ./certs/root.key:/data/caddy/pki/authorities/local/root.key
      - caddy-data:/data
      - caddy-config:/config
    healthcheck:
      # https://caddy.community/t/what-is-the-best-practise-for-doing-a-health-check-for-caddy-containers/12995
      test: "wget --no-verbose --tries=1 --spider http://localhost:2019/metrics || exit 1"
      interval: 5s
      retries: 20


# to generate HTTPS certifications on-demand >>>>>
  caddy-sidecar:
    image: httpd:2
    environment:
      - GOINSECURE=${DOMAIN},*.${DOMAIN}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    volumes:
       - ./certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
# to generate HTTPS certifications on-demand <<<<<

  test-ws:
    image: itaru2622/gorilla-websocket:bookworm
    build:
       context: ./tests/websocket-service
       dockerfile: Dockerfile
       args:
        - http_proxy=${http_proxy}
        - https_proxy=${https_proxy}
        - no_proxy=${no_proxy}
        - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    environment:
      - ENABLE_WSS=true
      - SCRIPT=*.go
    working_dir: /opt/gorilla-websocket/examples/chat
    volumes:
       - ./certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro

  # fake
  social-app:
    image: itaru2622/fastapi:bookworm
    ports:
      - 8001:8100
    environment:
      - app=main:app
      - opts=--host 0.0.0.0 --port 8100 --reload --reload-include "*.py" --reload-include "*.conf"
    volumes:
      - ./tests/catchall-app:/app

  pds:
    image: itaru2622/fastapi:bookworm
    ports:
      - 8002:3000
    environment:
      - app=main:app
      - opts=--host 0.0.0.0 --port 3000 --reload --reload-include "*.py" --reload-include "*.conf"
    volumes:
      - ./tests/catchall-app:/app
